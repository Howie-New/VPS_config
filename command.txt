0）准备：
apt update
apt upgrade

确保你的（子）域名已经有 A/AAAA 记录指向这台 VPS 的公网 IP。可用：

dig +short A   yourdomain.com
dig +short AAAA yourdomain.com

apt install -y nginx


# 启动并设为开机自启
systemctl enable --now nginx

systemctl restart nginx

systemctl status nginx

# 换成你的主域
DOMAIN="example.com"        
# 这是linux官方推荐的webroot 目录
WEBROOT="/var/www/${DOMAIN}"

mkdir -p "$WEBROOT"
echo "OK: ${DOMAIN} $(date)" > "${WEBROOT}/index.html"

cat >/etc/nginx/sites-available/${DOMAIN}.conf <<'EOF'
server {
    listen 80;
    listen [::]:80;
    server_name DOMAIN_PLACEHOLDER;

    root WEBROOT_PLACEHOLDER;
    index index.html;

    # 避免 /.well-known 被错误处理（一般不需要特殊配置，但留着注释供以后扩展）
    # location ^~ /.well-known/acme-challenge/ { }
}
EOF

sed -i "s|DOMAIN_PLACEHOLDER|${DOMAIN}|g" /etc/nginx/sites-available/${DOMAIN}.conf
sed -i "s|WEBROOT_PLACEHOLDER|${WEBROOT}|g" /etc/nginx/sites-available/${DOMAIN}.conf

ln -sf /etc/nginx/sites-available/${DOMAIN}.conf /etc/nginx/sites-enabled/${DOMAIN}.conf
nginx -t && systemctl reload nginx

测试 HTTP 是否可达（本机）：
curl -I http://$DOMAIN/ | head -n 1



# 安装 acme.sh（推荐）
curl https://get.acme.sh | sh -s email=my@example.com

# 载入环境变量（新开 shell 会自动）
source ~/.bashrc 2>/dev/null || true
source ~/.zshrc  2>/dev/null || true

如果默认CA无法颁发，则可以切换下列CA：
切换 Let’s Encrypt：acme.sh --set-default-ca --server letsencrypt
切换 Buypass：acme.sh --set-default-ca --server buypass
切换 ZeroSSL：acme.sh --set-default-ca --server zerossl

acme.sh --set-default-ca --server letsencrypt

# 注册账户（建议使用你自己的邮箱）
acme.sh --register-account -m my@example.com

用 --nginx 模式签发证书

要求：你的 Nginx 已有一个匹配 server_name 的 80 站点（上一步已完成），域名 80 对外可达。

# ECDSA-256（推荐，更轻更快）。可加多个 -d
acme.sh --issue -d "$DOMAIN" --nginx -k ec-256


安装证书到固定路径 + 配置 Nginx 的 HTTPS

把证书安装（复制/链接）到系统常用路径，并在续期后自动重载 Nginx：

acme.sh --install-cert -d "${DOMAIN}" \
  --key-file       /etc/ssl/private/${DOMAIN}.key \
  --fullchain-file /etc/ssl/certs/${DOMAIN}.fullchain.pem \
  --reloadcmd     "systemctl reload nginx"


现在新增一个 443 的 server（保持原来的 80 server，但把它改成跳转到 443）：

# 在同一个站点文件中追加/覆盖为 HTTPS 配置
cat >/etc/nginx/sites-available/${DOMAIN}.conf <<'EOF'
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name DOMAIN_PLACEHOLDER;

    ssl_certificate     /etc/ssl/certs/DOMAIN_PLACEHOLDER.fullchain.pem;
    ssl_certificate_key /etc/ssl/private/DOMAIN_PLACEHOLDER.key;

    root WEBROOT_PLACEHOLDER;
    index index.html;
}

server {
    listen 80;
    listen [::]:80
    server_name DOMAIN_PLACEHOLDER;
    return 301 https://$host$request_uri;
}
EOF

sed -i "s|DOMAIN_PLACEHOLDER|${DOMAIN}|g" /etc/nginx/sites-available/${DOMAIN}.conf
sed -i "s|WEBROOT_PLACEHOLDER|${WEBROOT}|g" /etc/nginx/sites-available/${DOMAIN}.conf

nginx -t && systemctl reload nginx

验证 HTTPS：

curl -I https://$DOMAIN/ | head -n 1
# 期望: HTTP/2 200 或 HTTP/1.1 200


acme.sh 安装时会自动加入 cron 任务，证书在到期前 ~30 天会自动续期并执行上面的 --reloadcmd。

检查列表与 cron：

acme.sh --list
crontab -l | grep acme.sh || true