0) : 准备软件更新和BBR拥塞控制算法
# 注意以下操作都在root用户权限下
apt update
apt upgrade
#启用 BBR TCP 拥塞控制算法
# 看是否是bbr 一般系统默认
sysctl -p

# 如果不是 那开启bbr
echo "net.core.default_qdisc=fq" >> /etc/sysctl.conf
echo "net.ipv4.tcp_congestion_control=bbr" >> /etc/sysctl.conf

1) : ipv4/v6 and Domain setting
DOMAIN=""
EMAIL=""
DISGUISED_URL=""
3XUI_PORT=""
XRAY_PORT=""

确保你的（子）域名已经有 A/AAAA 记录指向这台 VPS 的公网 IP。可用：

dig +short A   ${DOMAIN}
dig +short AAAA ${DOMAIN}

2) : nginx install
apt install -y nginx

# 启动并设为开机自启
systemctl enable --now nginx

# 检查nginx 配置文件语法
nginx -t
# 重启 nginx
systemctl restart nginx
# 查看nginx 运行状态
systemctl status nginx

3) : acme.sh 管理证书, 并将全部https/tls签发给nginx处理 防止tls指纹的探测
安装acme.sh
curl https://get.acme.sh | sh -s email=${EMAIL}


# acme.sh github官方文档: 起别名 方便直接调用acme.sh
alias acme.sh=~/.acme.sh/acme.sh

# 或者添加软链接：
ln -s  /root/.acme.sh/acme.sh /usr/local/bin/acme.sh


修改默认 CA
acme.sh 脚本默认 CA 服务器是 ZeroSSL，有时可能会导致获取证书的时候一直出现：Pending，The CA is processing your order，please just wait.
只需要把 CA 服务器改成 Let's Encrypt 即可，虽然更改以后还是有概率出现 pending，但基本 2-3 次即可成功
如果默认CA无法颁发，则可以切换下列CA：
切换 Let’s Encrypt：acme.sh --set-default-ca --server letsencrypt
切换 Buypass：acme.sh --set-default-ca --server buypass
切换 ZeroSSL：acme.sh --set-default-ca --server zerossl

acme.sh --set-default-ca --server letsencrypt


使用 Nginx 模式
如果你用的 Nginx 服务器，或者反代，acme.sh 还可以智能的从 Nginx 的配置中自动完成验证，你不需要指定网站根目录:

acme.sh --issue --nginx -d ${DOMAIN}

证书生成好以后，我们需要把证书复制给对应的 Apache、Nginx 或其他服务器去使用。
必须使用 --install-cert 命令来把证书复制到目标文件，请勿直接使用 ~/.acme.sh/ 目录下的证书文件，这里面的文件都是内部使用，而且目录结构将来可能会变化。

Nginx 示例:
acme.sh --install-cert -d ${DOMAIN} \
  --key-file       /etc/nginx/ssl/${DOMAIN}.key \
  --fullchain-file /etc/nginx/ssl/${DOMAIN}.fullchain.pem \
  --reloadcmd     "service nginx reload"


Nginx 的配置项 ssl_certificate 需要使用 /etc/nginx/ssl/fullchain.cer ，而非 /etc/nginx/ssl/<domain>.cer ，否则 SSL Labs 的测试会报证书链问题（Chain issues Incomplete）。

查看已安装证书信息
acme.sh --info -d ${DOMAIN}

4) : 编辑nginx config file
vim /etc/nginx/nginx.conf
# 写入/etc/nginx/nginx.conf 中的http模块
# 自动生成 Connection 头：有 Upgrade 就 upgrade，否则 close
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

编辑${DOMAIN}.conf
cat >/etc/nginx/sites-available/${DOMAIN}.conf <<'EOF'
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name DOMAIN_PLACEHOLDER;

    ssl_certificate     /etc/nginx/ssl/DOMAIN_PLACEHOLDER.fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/DOMAIN_PLACEHOLDER.key;

    location / {
        proxy_pass https://www.DISGUISED_URL_PLACEHOLDER; #伪装网址
        proxy_redirect off;
        proxy_ssl_server_name on;
        sub_filter_once off;
        sub_filter "DISGUISED_URL_PLACEHOLDER" $server_name;
        proxy_set_header Host "DISGUISED_URL_PLACEHOLDER";
        proxy_set_header Referer $http_referer;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Accept-Encoding "";
        proxy_set_header Accept-Language "zh-CN";
    }
    
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    ssl_protocols    TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;


    location /ray {   #分流路径 在3x-ui安装后在web界面设置
        proxy_redirect off;
        proxy_pass http://127.0.0.1:XRAY_PORT_PLACEHOLDER; #Xray端口
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location /xui {   #3x-ui路径 在3x-ui安装后在web界面设置
        proxy_redirect off;
        proxy_pass http://127.0.0.1:3XUI_PORT_PLACEHOLDER;  #3x-ui监听端口
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
}

server {
    listen 80;
    listen [::]:80;
    server_name DOMAIN_PLACEHOLDER;

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/html;
        default_type "text/plain";
    }

    location / {
        return 301 https://$host$request_uri;
    }
}
EOF

sed -i "s|DOMAIN_PLACEHOLDER|${DOMAIN}|g" /etc/nginx/sites-available/${DOMAIN}.conf
sed -i "s|DISGUISED_URL_PLACEHOLDER|${DISGUISED_URL}|g" /etc/nginx/sites-available/${DOMAIN}.conf
sed -i "s|3XUI_PORT_PLACEHOLDER|${3XUI_PORT}|g" /etc/nginx/sites-available/${DOMAIN}.conf
sed -i "s|XRAY_PORT_PLACEHOLDER|${XRAY_PORT}|g" /etc/nginx/sites-available/${DOMAIN}.conf

# 检查nginx 配置文件语法
nginx -t
# 重新加载 nginx
systemctl reload nginx
# 查看nginx 运行状态
systemctl status nginx